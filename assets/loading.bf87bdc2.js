import{L as t,g as e,I as l}from"./index.0d48cbf7.js";import{b as n,c as a,s as d,r as o,a as i,t as s,d as I,e as U,h as A,x as B}from"./index.5d212e24.js";const R={class:"markdown-body"},g=d('<pre><code class="language-html">&lt;template&gt;\n  &lt;div&gt;\n    &lt;bar-switch v-model=&quot;isLoad&quot; /&gt;\n    &lt;bar-loading v-model=&quot;isLoad&quot; loading-text=&quot;自定义加载文字&quot;&gt;\n      &lt;div&gt;感谢使用BAR-UI&lt;/div&gt;\n    &lt;/bar-loading&gt;\n    &lt;bar-loading loading-text=&quot;自定义加载图标和颜色&quot; color=&quot;red&quot;&gt;\n      &lt;template #icon&gt;\n        &lt;bar-icon name=&quot;success&quot; color=&quot;red&quot; /&gt;\n      &lt;/template&gt;\n      &lt;div&gt;感谢使用BAR-UI&lt;/div&gt;\n    &lt;/bar-loading&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\n  import { ref } from &#39;vue&#39;;\n  import { Icon, Switch, Loading } from &#39;bar-ui&#39;;\n\n  export default {\n    components: {\n      [Loading.name]: Loading,\n      [Switch.name]: Switch,\n      [Icon.name]: Icon,\n    },\n    setup() {\n      const isLoad = ref(false);\n      return { isLoad };\n    },\n  };\n&lt;/script&gt;\n</code></pre><h2>API</h2><table><thead><tr><th style="text-align:left;">参数</th><th style="text-align:left;">说明</th><th style="text-align:left;">类型</th><th style="text-align:left;">可选值</th><th style="text-align:left;">默认值</th></tr></thead><tbody><tr><td style="text-align:left;">v-model</td><td style="text-align:left;">是否显示</td><td style="text-align:left;">boolean</td><td style="text-align:left;"></td><td style="text-align:left;">true</td></tr><tr><td style="text-align:left;">loading-text</td><td style="text-align:left;">加载文字</td><td style="text-align:left;">string</td><td style="text-align:left;"></td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">color</td><td style="text-align:left;">图标和文字颜色</td><td style="text-align:left;">string</td><td style="text-align:left;">十六进制</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">mask-color</td><td style="text-align:left;">遮罩层颜色</td><td style="text-align:left;">string</td><td style="text-align:left;">十六进制</td><td style="text-align:left;"></td></tr></tbody></table><h2>Slots</h2><table><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">icon</td><td style="text-align:left;">加载图标</td></tr></tbody></table>',5),r={expose:[],setup:t=>(t,e)=>(n(),a("div",R,[g]))};const f={components:{[t.name]:t,[e.name]:e,[l.name]:l,md:r},setup:()=>({isLoad:o(!1)})},u={class:"loading-container"},c=I("h2",null,"Loading 加载组件",-1),x=I("div",null," 感谢使用BAR-UI感谢使用BAR-UI感谢使用BAR-UI感谢使用BAR-UI感谢使用BAR-UI感谢使用BAR-UI感谢使用BAR-UI感谢使用BAR-UI感谢使用BAR-UI感谢使用BAR-UI感谢使用BAR-UI感谢使用BAR-UI感谢使用BAR-UI感谢使用BAR-UI感谢使用BAR-UI感谢使用BAR-UI 感谢使用BAR-UI感谢使用BAR-UI感谢使用BAR-UI感谢使用BAR-UI感谢使用BAR-UI感谢使用BAR-UI感谢使用BAR-UI感谢使用BAR-UI感谢使用BAR-UI感谢使用BAR-UI感谢使用BAR-UI感谢使用BAR-UI感谢使用BAR-UI感谢使用BAR-UI感谢使用BAR-UI感谢使用BAR-UI 感谢使用BAR-UI感谢使用BAR-UI感谢使用BAR-UI感谢使用BAR-UI感谢使用BAR-UI感谢使用BAR-UI感谢使用BAR-UI感谢使用BAR-UI感谢使用BAR-UI感谢使用BAR-UI感谢使用BAR-UI感谢使用BAR-UI感谢使用BAR-UI感谢使用BAR-UI感谢使用BAR-UI感谢使用BAR-UI 感谢使用BAR-UI感谢使用BAR-UI感谢使用BAR-UI感谢使用BAR-UI感谢使用BAR-UI感谢使用BAR-UI感谢使用BAR-UI感谢使用BAR-UI感谢使用BAR-UI感谢使用BAR-UI感谢使用BAR-UI感谢使用BAR-UI感谢使用BAR-UI感谢使用BAR-UI感谢使用BAR-UI感谢使用BAR-UI ",-1),m=I("div",null," 感谢使用BAR-UI感谢使用BAR-UI感谢使用BAR-UI感谢使用BAR-UI感谢使用BAR-UI感谢使用BAR-UI感谢使用BAR-UI感谢使用BAR-UI感谢使用BAR-UI感谢使用BAR-UI感谢使用BAR-UI感谢使用BAR-UI感谢使用BAR-UI感谢使用BAR-UI感谢使用BAR-UI感谢使用BAR-UI ",-1),y=B("      "),h=B("\n    ");f.render=function(t,e,l,d,o,B){const R=i("bar-switch"),g=i("bar-loading"),r=i("bar-icon"),f=i("md"),p=s("highlightjs");return n(),a("div",u,[c,I(R,{modelValue:d.isLoad,"onUpdate:modelValue":e[1]||(e[1]=t=>d.isLoad=t)},null,8,["modelValue"]),I(g,{modelValue:d.isLoad,"onUpdate:modelValue":e[2]||(e[2]=t=>d.isLoad=t),"loading-text":"自定义加载文字"},{default:U((()=>[x])),_:1},8,["modelValue"]),I(g,{"loading-text":"自定义加载图标和颜色",color:"red"},{icon:U((()=>[I(r,{name:"success",color:"red"})])),default:U((()=>[m])),_:1}),A(I("pre",null,[y,I(f),h],512),[[p]])])};export default f;
