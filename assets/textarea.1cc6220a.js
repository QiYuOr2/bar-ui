import{T as t}from"./index.6c520161.js";import{b as e,c as l,s as d,r as a,a as n,t as s,d as i,h as r,x as g}from"./index.05c7536a.js";const x={class:"markdown-body"},o=d('<pre><code class="language-html">&lt;template&gt;\n  &lt;div&gt;\n    &lt;bar-textarea\n      v-model=&quot;textarea&quot;\n      :rows=&quot;5&quot;\n      :cols=&quot;30&quot;\n      placeholder=&quot;自定义行列数&quot;\n    /&gt;\n    &lt;bar-textarea v-model=&quot;textarea&quot; :row=&quot;5&quot; placeholder=&quot;占满宽度&quot; block /&gt;\n    &lt;bar-textarea placeholder=&quot;有错误&quot; has-fail :maxlength=&quot;5&quot; /&gt;\n    &lt;bar-textarea placeholder=&quot;禁用&quot; disabled /&gt;\n    &lt;bar-textarea placeholder=&quot;只读&quot; readonly /&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\n  import { Textarea } from &#39;bar-ui&#39;;\n\n  export default {\n    components: {\n      [Textarea.name]: Textarea,\n    },\n    setup() {\n      const textarea = ref(&#39;&#39;);\n      return { textarea };\n    },\n  };\n&lt;/script&gt;\n</code></pre><h2>API</h2><table><thead><tr><th style="text-align:left;">参数</th><th style="text-align:left;">说明</th><th style="text-align:left;">类型</th><th style="text-align:left;">可选值</th><th style="text-align:left;">默认值</th></tr></thead><tbody><tr><td style="text-align:left;">v-model</td><td style="text-align:left;">输入框的内容</td><td style="text-align:left;">string | number</td><td style="text-align:left;"></td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">placeholder</td><td style="text-align:left;">占位符</td><td style="text-align:left;">string</td><td style="text-align:left;"></td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">rows</td><td style="text-align:left;">行数</td><td style="text-align:left;">number</td><td style="text-align:left;"></td><td style="text-align:left;">4</td></tr><tr><td style="text-align:left;">cols</td><td style="text-align:left;">列数</td><td style="text-align:left;">number</td><td style="text-align:left;"></td><td style="text-align:left;">20</td></tr><tr><td style="text-align:left;">name</td><td style="text-align:left;">输入框的 name</td><td style="text-align:left;">string</td><td style="text-align:left;"></td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">type</td><td style="text-align:left;">输入框类型</td><td style="text-align:left;">string</td><td style="text-align:left;">原生 input 的类型</td><td style="text-align:left;">text</td></tr><tr><td style="text-align:left;">block</td><td style="text-align:left;">块级输入框</td><td style="text-align:left;">boolean</td><td style="text-align:left;"></td><td style="text-align:left;">false</td></tr><tr><td style="text-align:left;">has-fail</td><td style="text-align:left;">有错误</td><td style="text-align:left;">boolean</td><td style="text-align:left;"></td><td style="text-align:left;">false</td></tr><tr><td style="text-align:left;">disabled</td><td style="text-align:left;">禁用</td><td style="text-align:left;">boolean</td><td style="text-align:left;"></td><td style="text-align:left;">false</td></tr><tr><td style="text-align:left;">readonly</td><td style="text-align:left;">只读</td><td style="text-align:left;">boolean</td><td style="text-align:left;"></td><td style="text-align:left;">false</td></tr><tr><td style="text-align:left;">autofocus</td><td style="text-align:left;">自动获取焦点</td><td style="text-align:left;">boolean</td><td style="text-align:left;"></td><td style="text-align:left;">false</td></tr><tr><td style="text-align:left;">maxlength</td><td style="text-align:left;">最大长度</td><td style="text-align:left;">string | number</td><td style="text-align:left;"></td><td style="text-align:left;"></td></tr></tbody></table><h2>Events</h2><table><thead><tr><th style="text-align:left;">参数</th><th style="text-align:left;">说明</th><th style="text-align:left;">函数签名</th></tr></thead><tbody><tr><td style="text-align:left;">focus</td><td style="text-align:left;">按钮点击事件</td><td style="text-align:left;">(event: FocusEvent) =&gt; void</td></tr><tr><td style="text-align:left;">blur</td><td style="text-align:left;">按钮点击事件</td><td style="text-align:left;">(event: FocusEvent) =&gt; void</td></tr><tr><td style="text-align:left;">press-enter</td><td style="text-align:left;">按钮点击事件</td><td style="text-align:left;">(event: KeyboardEvent) =&gt; void</td></tr><tr><td style="text-align:left;">keypress</td><td style="text-align:left;">按钮点击事件</td><td style="text-align:left;">(event: KeyboardEvent) =&gt; void</td></tr><tr><td style="text-align:left;">keydown</td><td style="text-align:left;">按钮点击事件</td><td style="text-align:left;">(event: KeyboardEvent) =&gt; void</td></tr><tr><td style="text-align:left;">keyup</td><td style="text-align:left;">按钮点击事件</td><td style="text-align:left;">(event: KeyboardEvent) =&gt; void</td></tr><tr><td style="text-align:left;">change</td><td style="text-align:left;">按钮点击事件</td><td style="text-align:left;">(event: Event) =&gt; void</td></tr><tr><td style="text-align:left;">input</td><td style="text-align:left;">按钮点击事件</td><td style="text-align:left;">(event: Event) =&gt; void</td></tr></tbody></table>',5),f={expose:[],setup:t=>(t,d)=>(e(),l("div",x,[o]))};const y={components:{[t.name]:t,md:f},setup:()=>({textarea:a("")})},u=i("h2",null,"Textarea 按钮组件",-1),h=g("      "),c=g("\n    ");y.render=function(t,d,a,g,x,o){const f=n("bar-textarea"),y=n("md"),b=s("highlightjs");return e(),l("div",null,[u,i(f,{modelValue:g.textarea,"onUpdate:modelValue":d[1]||(d[1]=t=>g.textarea=t),rows:5,cols:30,placeholder:"自定义行列数"},null,8,["modelValue"]),i(f,{modelValue:g.textarea,"onUpdate:modelValue":d[2]||(d[2]=t=>g.textarea=t),row:5,placeholder:"占满宽度",block:""},null,8,["modelValue"]),i(f,{placeholder:"有错误","has-fail":"",maxlength:5}),i(f,{placeholder:"禁用",disabled:""}),i(f,{placeholder:"只读",readonly:""}),r(i("pre",null,[h,i(y),c],512),[[b]])])};export default y;
